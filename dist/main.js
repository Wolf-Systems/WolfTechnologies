/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const cloud = document.getElementById(\"cloud\");\r\nconst barraLateral = document.querySelector(\".barra-lateral\");\r\nconst spans = document.querySelectorAll(\"span\");\r\nconst palanca = document.querySelector(\".switch\");\r\nconst circulo = document.querySelector(\".circulo\");\r\nconst menu = document.querySelector(\".menu\");\r\nconst main = document.querySelector(\"main\");\r\n\r\nmenu.addEventListener(\"click\", () => {\r\n    barraLateral.classList.toggle(\"max-barra-lateral\");\r\n    if (barraLateral.classList.contains(\"max-barra-lateral\")) {\r\n        menu.children[0].style.display = \"none\";\r\n        menu.children[1].style.display = \"block\";\r\n    }\r\n    else {\r\n        menu.children[0].style.display = \"block\";\r\n        menu.children[1].style.display = \"none\";\r\n    }\r\n\r\n    if (window.innerWidth <= 300) {\r\n        barraLateral.classList.add(\"mini-barra-lateral\");\r\n        main.classList.add(\"min-main\");\r\n        spans.forEach((span) => {\r\n            span.classList.add(\"oculto\");\r\n        })\r\n    }\r\n\r\n    localStorage.setItem(\"max-barra-lateral\", barraLateral.classList.contains(\"max-barra-lateral\"));\r\n})\r\n\r\npalanca.addEventListener(\"click\", () => {\r\n    let body = document.body;\r\n    body.classList.toggle(\"dark-mode\");\r\n    circulo.classList.toggle(\"prendido\");\r\n\r\n    localStorage.setItem(\"dark-mode\", document.body.classList.contains(\"dark-mode\"));\r\n})\r\n\r\ncloud.addEventListener(\"click\", () => {\r\n    barraLateral.classList.toggle(\"mini-barra-lateral\");\r\n    main.classList.toggle(\"min-main\");\r\n    spans.forEach((span) => {\r\n        span.classList.toggle('oculto');\r\n    })\r\n\r\n    localStorage.setItem(\"mini-barra-lateral\", barraLateral.classList.contains(\"mini-barra-lateral\"));\r\n});\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    const body = document.body;\r\n\r\n    // Restaurar modo oscuro\r\n    if (localStorage.getItem(\"dark-mode\") === \"true\") {\r\n        body.classList.add(\"dark-mode\");\r\n        circulo.classList.add(\"prendido\");\r\n    }\r\n\r\n    // Restaurar estado de barra lateral\r\n    if (localStorage.getItem(\"mini-barra-lateral\") === \"true\") {\r\n        barraLateral.classList.add(\"mini-barra-lateral\");\r\n        main.classList.add(\"min-main\");\r\n        spans.forEach((span) => {\r\n            span.classList.add(\"oculto\");\r\n        });\r\n    }\r\n\r\n    if (localStorage.getItem(\"max-barra-lateral\") === \"true\") {\r\n        barraLateral.classList.add(\"max-barra-lateral\");\r\n        menu.children[0].style.display = \"none\";\r\n        menu.children[1].style.display = \"block\";\r\n    }\r\n});\r\n\r\n// Función para mostrar la sección activa\r\nfunction showSection(section) {\r\n    // Ocultamos todas las secciones\r\n    const sections = document.querySelectorAll('.section');\r\n    sections.forEach(sec => sec.classList.remove('active'));\r\n\r\n    // Mostramos la sección seleccionada\r\n    const selectedSection = document.getElementById(section);\r\n    selectedSection.classList.add('active');\r\n\r\n    // Guardamos la sección activa en localStorage para persistencia\r\n    localStorage.setItem('activeSection', section);\r\n}\r\n\r\n// Función para mostrar la sección activa\r\nfunction showSection(section) {\r\n    // Ocultamos todas las secciones\r\n    const sections = document.querySelectorAll('.section');\r\n    sections.forEach(sec => sec.classList.remove('active'));\r\n\r\n    // Mostramos la sección seleccionada\r\n    const selectedSection = document.getElementById(section);\r\n    selectedSection.classList.add('active');\r\n\r\n    // Guardamos la sección activa en localStorage para persistencia\r\n    localStorage.setItem('activeSection', section);\r\n}\r\n\r\n// Al cargar la página, verificar si hay una sección activa en el localStorage\r\nwindow.onload = function () {\r\n    const activeSection = localStorage.getItem('activeSection') || 'home-section';\r\n    showSection(activeSection);\r\n\r\n    // Aplicar la clase 'active' al enlace correspondiente\r\n    const links = document.querySelectorAll(\"a\");\r\n    links.forEach(link => {\r\n        if (link.getAttribute(\"href\") === `#${activeSection}`) {\r\n            link.classList.add(\"active\");\r\n        }\r\n    });\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const links = document.querySelectorAll(\"a\");\r\n\r\n    links.forEach(link => {\r\n        link.addEventListener(\"click\", function () {\r\n            // Solo afecta a los enlaces relacionados con las secciones\r\n            if (link.getAttribute(\"href\").startsWith(\"#\")) {\r\n                links.forEach(l => l.classList.remove(\"active\")); // Remueve la clase de todos los enlaces\r\n                this.classList.add(\"active\"); // Agrega la clase al enlace clickeado\r\n            }\r\n        });\r\n    });\r\n\r\n    const tabsContainer = document.querySelector(\".tabs\"); // Selecciona solo el contenedor de tabs\r\n    if (!tabsContainer) return; // Si no existe, termina la ejecución\r\n\r\n    const tabs = tabsContainer.querySelectorAll(\"a\"); // Solo las etiquetas <a> dentro de .tabs\r\n    const articles = document.querySelectorAll(\"article\");\r\n\r\n    // Recuperar el índice de la pestaña activa desde localStorage\r\n    const activeTabIndex = localStorage.getItem(\"activeTabIndex\");\r\n\r\n    // Si hay un índice activo guardado, seleccionamos esa pestaña\r\n    if (activeTabIndex !== null) {\r\n        tabs[activeTabIndex].classList.add(\"active\");\r\n        articles.forEach((article, index) => {\r\n            article.style.display = index === parseInt(activeTabIndex) ? \"block\" : \"none\";\r\n        });\r\n    } else {\r\n        // Si no hay índice guardado, seleccionamos la primera pestaña por defecto\r\n        tabs[0].classList.add(\"active\");\r\n        articles.forEach((article, index) => {\r\n            article.style.display = index === 0 ? \"block\" : \"none\";\r\n        });\r\n    }\r\n\r\n    // Agregar evento de clic a cada pestaña\r\n    tabs.forEach((tab, index) => {\r\n        tab.addEventListener(\"click\", function (event) {\r\n            event.preventDefault(); // Evita la recarga de la página\r\n\r\n            // Remover la clase 'active' solo de los enlaces dentro de .tabs\r\n            tabs.forEach(t => t.classList.remove(\"active\"));\r\n\r\n            // Agregar 'active' a la pestaña actual\r\n            tab.classList.add(\"active\");\r\n\r\n            // Ocultar todos los artículos\r\n            articles.forEach(article => article.style.display = \"none\");\r\n\r\n            // Mostrar el artículo correspondiente al índice de la pestaña\r\n            articles[index].style.display = \"block\";\r\n\r\n            // Guardar el índice de la pestaña activa en localStorage\r\n            localStorage.setItem(\"activeTabIndex\", index);\r\n        });\r\n    });\r\n});\n\n//# sourceURL=webpack://portafoliowolfsystems/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;